### JDBC Configuration 
#
# db_type : The type of database being used. Choices include Apache Derby Embedded, Apache Derby Network, and MySQL.
#           Valid options: derby_embedded, derby_network, mysql
#           Example: derby_embedded	 
#
# db_hostname : Use if using Apache Derby Network or MySQL. Should be a valid hostname or IP-address.
#               Do not set if using Apache Derby Embedded.
#               Example: 192.168.0.100
#
# db_port : Use if using Apache Derby Network, MySQL, or PostgreSQL. Do not set if using Apache Derby Embedded. Should be a valid port #.
#           Tips-- Apache Derby Network usually runs on port 1527
#                  MySQL usually runs on port 3306
#           Example: 3306
#
# db_localpath : Use if using Apache Derby Embedded. This should be a path to a folder on your computer where Derby will store its database data.
#                Note: When using Windows, '\' characters must be escaped with another '\' character.
#                Example (Windows): C:\\Data
#                Example (Linux): /opt/Data
#
# db_name : The name of the 'database' (aka, the schema).
#           Example: mySchema
#
# db_username : The username that you wish to connect to the database with.
#               Example: myUser
#
# db_password : The password that you wish to connect to the database with (if any).
#               Example: myPW
#
# db_attributes : Specify any JDBC connection attributes that you wish to use to connect to your databases. 
#                 The normal format is: attribute1=value&attribute2=value&attribute2=value
#                 Example (MySQL specific): autoReconnect=true&failOverReadOnly=false&maxReconnects=1
#
# db_custom_jdbc : Most of the other JDBC variables exist solely to simplify the process of building the JDBC connection string.
#                  If you wish to bypass all of the above listed JDBC variables, you can specify a custom JDBC connection string in this variable.
#                  The other JDBC variables will be ignored (ex- db_name, db_localpath, etc). 
#                  Note - Application code often times uses db_type as a hint for query building. When using db_custom_jdbc, you should also specify a valid db_type.
#                  Example: jdbc:derby://myhost:1527/memory:myDB;create=true
db_type = derby_embedded
#db_hostname =
#db_port =
db_localpath = 
db_name = statsagg_db
db_username = myUser
db_password = myPW
db_attributes = create=true;upgrade=true;



### Flyway Variables
#
# These are variables that control a few aspects of Flyway (7.x). Flyway is used to update the StatsAgg database when new builds are deployed. 
# Advanced Flyway options are controlled in a separate configuration file -- flyway.properties.
# These variables shouldn't be changed unless you REALLY know what you're doing.
#
# flyway_migrate_enabled : Enables running Flyway migrate -- which is used to update the StatsAgg database tables when new builds are deployed. This should typically be left enabled.
#                          More details: https://flywaydb.org/documentation/command/migrate
#                          Default: true
#
# flyway_repair_enabled : Enables running Flyway repair -- which is used to fix previous database table updates that had issues (ie - a failed 'migrate'). This should typically be left enabled.
#                         More details: https://flywaydb.org/documentation/command/repair
#                         Default: true
flyway_migrate_enabled = true
flyway_repair_enabled = true



### HikariCP Variables
#
# As of StatsAgg 1.6, StatsAgg uses HikariCP (3.x) as it's connection pool. 
# HikariCP-specific configurations can be set here. The availabile options are listed here: https://github.com/brettwooldridge/HikariCP
# These variables shouldn't be changed unless you REALLY know what you're doing.
poolName = StatsAgg
maximumPoolSize = 50
maxLifetime = 30000
connectionTimeout = 5000
registerMbeans = true



### Apache Derby Configuration
#
# These are Derby configuration values that override the default Derby system-wide configuration (the default derby.properties values).
# If using another database engine (ie- MySQL), setting these variables will have no effect.
# View the 'Derby properties' page of Apache Derby Reference Manual for more details 
# http://db.apache.org/derby/docs/10.15/ref/crefproper22250.html
# These variables shouldn't be changed unless you REALLY know what you're doing.
#
# Note : Limited variable substitution is allowed. 
#        Use ${db_localpath} to get the value of db_localpath (specified in the JDBC connection section)
#        Use ${db_name} to get the value of db_name (specified in the JDBC connection section)
#        Use ${file.separator} to get the operating-system specific file path separator
derby.system.home = ${db_localpath}
derby.infolog.append = true
derby.stream.error.file = ${db_localpath}${file.separator}${db_name}${file.separator}log${file.separator}db_log.txt      
derby.storage.pageSize = 16384
derby.storage.pageCacheSize = 15000